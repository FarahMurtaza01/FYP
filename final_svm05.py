# -*- coding: utf-8 -*-
"""Final_SVM05.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1AvmT_-KBr1LfiARNQ8P1U1eK_xxratcH
"""



from google.colab import drive
drive.mount('/content/drive')

# Step 1: Install and import necessary libraries
import numpy as np
import pandas as pd
from sklearn.svm import SVC
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import StandardScaler
from sklearn.metrics import accuracy_score, confusion_matrix, classification_report
import seaborn as sns
import matplotlib.pyplot as plt



# Step 2: Load Data
# -------------------------------
from google.colab import drive
drive.mount('/content/drive')

file_path = '/content/drive/MyDrive/slide_window_preprocessed_wesad.csv'
df = pd.read_csv(file_path)

# Replace this with your own data

# Example: 3 classes, 1000 samples, 5 features
from sklearn.datasets import make_classification
X, y = make_classification(
    n_samples=16493, n_features=5, n_informative=3, n_classes=3, n_clusters_per_class=1, random_state=42
)

# Step 3: Split dataset
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, stratify=y, random_state=42)


# Step 4: Feature scaling
scaler = StandardScaler()
X_train_scaled = scaler.fit_transform(X_train)
X_test_scaled = scaler.transform(X_test)

# Step 5: Define and train SVM model
clf = SVC(kernel='rbf', C=1.0, gamma='scale', random_state=42)
clf.fit(X_train_scaled, y_train)

# Step 6: Evaluate the model
y_pred = clf.predict(X_test_scaled)
accuracy = accuracy_score(y_test, y_pred)
print("Accuracy:", accuracy)
print("Classification Report:\n", classification_report(y_test, y_pred))


# Step 7: Confusion Matrix
cm = confusion_matrix(y_test, y_pred)
sns.heatmap(cm, annot=True, fmt='d', cmap='Blues')
plt.title("Confusion Matrix (SVM)")
plt.xlabel("Predicted")
plt.ylabel("Actual")
plt.show()