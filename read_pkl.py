# -*- coding: utf-8 -*-
"""Read_pkl.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/18EkGzCxbwnJtFFIIeLLUJEeM5XgyIOLS
"""

from google.colab import drive
drive.mount('/content/drive')

# Step 1: Mount Google Drive
from google.colab import drive
drive.mount('/content/drive')

# Step 2: Import libraries
import os
import pickle
import pandas as pd
import numpy as np

# Step 3: Define function to load WESAD .pkl file
def load_wesad_subject(file_path):
    with open(file_path, 'rb') as f:
        data = pickle.load(f, encoding='latin1')
    return data

# Step 4: Convert the loaded data to readable DataFrame
# Step: Inspect keys and signal shapes in the loaded file
wesad_data = load_wesad_subject(file_path)

# Print top-level keys
print("Top-level keys in .pkl file:", wesad_data.keys())

# Check if 'signal' and 'label' keys exist
if 'signal' not in wesad_data:
    raise ValueError("‚ùå 'signal' key not found in the .pkl file!")
if 'label' not in wesad_data:
    raise ValueError("‚ùå 'label' key not found in the .pkl file!")

# Now print each signal's name and shape
print("\nüìä Signal Shapes:")
for key, value in wesad_data['signal'].items():
    arr = np.array(value)
    print(f"{key}: shape = {arr.shape}")

def convert_to_dataframe(data):
    label = data['label']
    signals = data['signal']
    df_list = []
    print("Processing signals...")

    for part in ['chest', 'wrist']:
        if part in signals and isinstance(signals[part], dict):
            for signal_name, signal_data in signals[part].items():
                signal_array = np.array(signal_data)

                if signal_array is None or signal_array.size == 0 or signal_array.ndim == 0:
                    print(f"‚ö†Ô∏è Skipping {part}_{signal_name} ‚Äî empty or invalid shape {signal_array.shape}")
                    continue

                if signal_array.ndim == 1:
                    signal_array = signal_array.reshape(-1, 1)

                try:
                    df = pd.DataFrame(signal_array)
                    df.columns = [f"{part}_{signal_name}_{i}" for i in range(signal_array.shape[1])]
                    df_list.append(df)
                    print(f"‚úÖ Loaded {part}_{signal_name} with shape {signal_array.shape}")
                except Exception as e:
                    print(f"‚ùå Error loading {part}_{signal_name}: {e}")
        else:
            print(f"‚ö†Ô∏è No data found in: {part}")

    if not df_list:
        raise ValueError("No valid signals found to convert. Check the file format.")

    full_df = pd.concat(df_list, axis=1)
    full_df['label'] = label[:len(full_df)]

    return full_df

wesad_data = load_wesad_subject(file_path)
df = convert_to_dataframe(wesad_data)

# Step 5: Set path to your .pkl file in Google Drive
# Example path: '/content/drive/MyDrive/WESAD/S2/S2.pkl'
file_path = '/content/drive/MyDrive/S4/S4.pkl'  # <-- Change this to your correct path

# Step 6: Load and convert
wesad_data = load_wesad_subject(file_path)
df = convert_to_dataframe(wesad_data)

# Step 7: Display and save
print("Sample of converted DataFrame:")
display(df.head())

# Save as CSV in the same folder
save_path = '/content/drive/MyDrive/WESAD/S4/S4.pkl_converted.csv'
df.to_csv(save_path, index=False)
print(f"Saved converted file at: {save_path}")

# Save CSV to Colab temporary storage
df.to_csv("converted_wesad_data.csv", index=False)

# Make it downloadable
from google.colab import files
files.download("converted_wesad_data.csv")

